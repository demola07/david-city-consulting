
name: Deploy to Vercel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # - name: Run tests
      #   run: npm test

      - name: Build project
        run: npm run build

      - name: Remove Zone.Identifier files
        run: find ./dist -name "*:Zone.Identifier" -type f -delete || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/

  deploy:
    name: Deploy to Vercel
    needs: build
    runs-on: ubuntu-latest
    # Modify the condition to check for both 'main' and 'master' branches
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist/

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # Debugging step to check environment
      - name: Debug information
        run: |
          echo "Current branch: ${{ github.ref }}"
          echo "Vercel Project ID: ${{ env.VERCEL_PROJECT_ID }}"
          ls -la dist/

      # Skip the Build Step since we've already built the project
      - name: Skip Build Step in Vercel
        run: echo '{"version":2,"builds":[]}' > vercel.json

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
